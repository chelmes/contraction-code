################################################################################
#
# Makefile to compile and link C programs with MPI subroutines
#
# Version valid for Linux machines with MPICH
#
# "make" compiles and links the specified main programs and modules,
# using the specified libraries (if any), and produces the executables
#
# "make clean" removes all files generated by "make"
#
# Dependencies on included files are automatically taken care of
#
################################################################################

all: rmxeq mkdep mkxeq
.PHONY: all


# main programs and modules to be compiled

MAIN = measure8

RANDOM = ranlxs ranlxd gauss random_su3

START = geometry start sinit utils flipbc

FLAGS = flags parms wspace

UPDATE = action ucom shift staples

MISC = endian mutils archive sarchive sse_fcts su3_fcts su3_prods \
       cmatrix_dble cmatrix bg_fcts

LINALG = linalg linalg_dble valg valg_dble

LINSOLV = bicg fgcr cgne fgcr4vd

SW_TERM = pauli pauli_dble swinit sw_term blk_sw_term

DIRAC = Pbnd Qbnd Qhat scom Pbnd_dble Qbnd_dble Qhat_dble sdcom

BLOCK = block blk_grid blk_umap blk_swmap blk_smap

SAP_GCR = blk_solv msap sap_gcr

HMC = chrono frcfcts force0 force1 force2 genfrc liealg hmcflds bndop \
      lpfrog bshift mvfld

EVA = jacobi jacobi_dble

DFL = vgrid vflds vinit vcom vdcom Zgen Zops Zhat Zhat_dble dfl_subspace \
      dfl dfl_sap_gcr dfl_modes

MEASURE =  mygeometry algebra correlators source twistbc archive_ildg \
           IOarchive baryons propagator link_smearing rndgauge

LIME = lime_utils lime_fseeko lime_reader lime_header lime_writer

MODULES = $(RANDOM) $(START) $(FLAGS) $(UPDATE) $(MISC) \
          $(LINALG) $(LINSOLV) $(SW_TERM) $(DIRAC) $(BLOCK) \
          $(SAP_GCR) $(HMC) $(EVA) $(DFL) $(MEASURE) $(LIME)


# search path for modules

MDIR     = ../../DD-HMC-1.2.2/modules
MDIRMEAS = ../modules
MDIRLIME = ../../c-lime/lib

VPATH = .:$(MDIR)/random:$(MDIR)/flags:$(MDIR)/start:$(MDIR)/update:\
          $(MDIR)/misc:$(MDIR)/linalg:$(MDIR)/linsolv:$(MDIR)/sw_term:\
          $(MDIR)/dirac:$(MDIR)/block:$(MDIR)/sap_gcr:$(MDIR)/hmc:\
          $(MDIR)/eva:$(MDIR)/dfl:$(MDIRMEAS):$(MDIRLIME)


# Logging option (-mpilog or -mpitrace or -mpianim)

LOGOPTION =


# additional include directories

INCPATH = $(MPIR_HOME)/include ../../DD-HMC-1.2.2/include ../include ../../c-lime/include


# additional libraries

LIBS = m
LIBPATH = $(MPIR_HOME)/lib ../../c-lime/lib


# scheduling and optimization options

#CFLAGS = -Wall -std=c89 -pedantic -Wno-long-long -mcpu=i586 \
         -fno-force-mem -O -malign-double -DSSE3 -DPM
# transtec
#CFLAGS = -Wall -std=c89 -pedantic -Wno-long-long -mcpu=x86-64 \
         -O
# Andreas' laptop
#CFLAGS = -Wall -std=c89 -pedantic -Wno-long-long -mcpu=native \
         -O -DPM
#CFLAGS = -Wall -std=c89 -pedantic -Wno-long-long -mcpu=native \
         -O0 -DPM -pg -m32 -msse2 -DSSE2
#CFLAGS = -Wall -std=c89 -pedantic  \
         -O0 -DPM -DSSE3
#CFLAGS = -ansi -Wall -std=c89 -pedantic  \
         -O -DPM -DSSE3

# For Mac
CFLAGS = -Wall -O2 -pedantic 
############################## do not change ###################################

SHELL=/bin/bash
CC=mpicc
CLINKER=$(CC)

PGMS= $(MAIN) $(MODULES)

-include $(addsuffix .d,$(PGMS)) # The .d files contain all dependencies
		# and are herewith defined for the remainder of the 
		# makefile


# rule to make dependencies

$(addsuffix .d,$(PGMS)): %.d: %.c Makefile
	@ $(GCC) -ansi $< -MM $(addprefix -I,$(INCPATH)) -o $@


# rule to compile source programs

$(addsuffix .o,$(PGMS)): %.o: %.c Makefile
	$(CC) $< -c $(CFLAGS) $(LOGOPTION) $(addprefix -I,$(INCPATH))


# rule to link object files

$(MAIN): %: %.o $(addsuffix .o,$(MODULES)) Makefile
	$(CLINKER)  $< $(addsuffix .o,$(MODULES)) $(CFLAGS) $(LOGOPTION) \
        $(addprefix -L,$(LIBPATH)) $(addprefix -l,$(LIBS)) -o $@


# produce executables

mkxeq: $(MAIN)


# remove old executables

rmxeq:
	@ -rm -f $(MAIN); \
        echo "delete old executables"


# make dependencies

mkdep:  $(addsuffix .d,$(PGMS))
	@ echo "generate tables of dependencies"


# clean directory

clean:
	@ -rm -rf *.d *.o *.alog *.clog *.slog $(MAIN)
.PHONY: clean

################################################################################
